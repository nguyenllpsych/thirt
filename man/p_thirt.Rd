% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probability.R
\name{p_thirt}
\alias{p_thirt}
\title{Calculate probability}
\usage{
p_thirt(gamma, items, persons, picked_order = NULL)
}
\arguments{
\item{gamma}{a data.frame of length \verb{[total binary outcomes]} with two variables:
variable \code{pair} of the format \code{i-j} for item pair \code{ij},
variable \code{gamma} for threshold parameters.}

\item{items}{a data.frame of length \verb{[total items]} with five variables:
variable \code{item} of the format \code{i} for item number \code{i},
variable \code{block} of the format \code{b} for block number \code{b},
variable \code{dim} of the format \code{d} for dimension number \code{d},
variable \code{lambda} for loadings,
variable \code{psisq} for uniqueness,
variable \code{dim} for dimensions.}

\item{persons}{a data.frame of length \verb{[number of people]} with variables:
variable \code{person} of the format \code{p} for person number \code{p},
variables named \code{theta_d} for dimension number \code{d}.}

\item{picked_order}{a data.frame of length \verb{[person x block]} with four variables:
variable \code{person} of the format \code{p} for person number \code{p},
variable \code{block} of the format \code{b} for block number \code{b},
variable \code{resp} of the format \code{r} for response order number \code{r}
which follows mupp::find_all_permutation orders,
variable \code{seq} which includes the items in ranked order by each person.
data.frame similar to output in \code{simulate_thirt_resp()$resp}}
}
\value{
a list of length \verb{[block]} of matrices with dimension \verb{[person X permutation]}
of probabilities for each response pattern per block.
}
\description{
Calculate the probability of all potential response patterns for each respondent
}
\examples{
\dontrun{
set.seed(202106)

params <- simulate_thirt_params(n_person = 200,
                                n_item   = 3,
                                n_block  = 2,
                                n_dim    = 3)

prob   <- do.call(p_thirt, params)

for(block in seq_along(prob)){
  print(summary(prob[[block]]))
}
}

}
